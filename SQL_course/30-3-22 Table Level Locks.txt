Lock Table: write (this locks the entire table)
        If a table is locked to write level, no operations can be performed on that table until that lock is removed. Table locks can reduce the concurrency of operations that can happen in mysql, as no other operations can be performed on the table during its locked state.
        

Row Level Locks
        This only locks the row a particular session is updating. all the other rows of the table are still accessible to other session for amendments.
        Row level locks allow for high concurrency as only the rows are locked in a table instead of whole table.
        

DeadLocks
        When two sessions happen to be waiting for a resource to be unlocked before releasing own locks is deadlocks.
        MySQL is actually smart enough to detect Deadlocks and will kill one of the sessions(transactions in that session will be rolled back)and show error message to the user
        
        
        
command to check the data locks
    
    select * from performance_schema.data_locks;
    show processlist;
    select * from information_schema.processlist;
        

Clustering 
        MySQL uses BTree for clustering based on the primary key. In the absence of primary key, it uses any unique key for ordering.
        Using any alpha-numeric key for ordering is a bad idea as the SQL will have to work very hard to order the results based on such results. 
        In the absense of any primary key/unique key, MYSQL uses GEN_CLUST_INDEX for ordering